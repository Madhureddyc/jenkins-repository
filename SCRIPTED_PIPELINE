node {
    def mavenHome = tool name:"MAEN_HOME"
    echo "GitHub Branch Name is ${env.BRANCH_NAME}"
    echo "JENKINS HOME is ${env.JENKINS_HOME}"
    echo "JENKINS URL is ${env.JENKINS_URL}"
    echo "JOB Name is ${env.JOB_NAME}"
    stage('GitClone'){
        git credentialsId: 'GIT_HUB_CREDENTIALS', url: 'https://github.com/ganeshsoftwaresolutions/maven-web-application.git'
    }
    stage('MavenBuild'){
        sh "${mavenHome}/bin/mvn clean package"
    }
    stage('DeployToTomcat'){
        sshagent(['TOMCAT_CREDS']) {
            sh 'scp -o StrictHostKeyChecking=no target/maven-web-application.war ubuntu@43.205.128.80:/usr/local/tomcat9/webapps/ROOT.war'
        }
    }
    stage('DockerBuild'){
        sh 'docker build -t ganeshreddy001/javatomcatapplication:$BUILD_NUMBER .'
    }
    stage('DockerPush'){
        withCredentials([usernamePassword(credentialsId: 'DOCKER_HUB_CREDS', passwordVariable: 'Docker_Hub_Credentails', usernameVariable: 'Docker_Hub')]) {
            sh 'docker login -u $Docker_Hub -p $Docker_Hub_Credentails'
            sh 'docker push ganeshreddy001/javatomcatapplication:$BUILD_NUMBER'
        }
    }
    stage('DeployIntoAContainer'){
        sshagent(['TOMCAT_CREDS']) {
            sh 'ssh -o StrictHostKeyChecking=no ubuntu@43.205.128.80 hostname -i'
            sh 'ssh -o StrictHostKeyChecking=no ubuntu@43.205.128.80 docker rm -f java-tomcat-application'
            sh 'ssh -o StrictHostKeyChecking=no ubuntu@43.205.128.80 docker run -d --name java-tomcat-application -p 9090:8080 ganeshreddy001/javatomcatapplication:$BUILD_NUMBER'
            sh 'ssh -o StrictHostKeyChecking=no ubuntu@43.205.128.80 docker ps -a'
        }
    }
}
